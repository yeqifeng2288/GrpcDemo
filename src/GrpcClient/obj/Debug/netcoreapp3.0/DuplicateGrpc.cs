// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Duplicate.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer.Protos {
  public static partial class Duplicater
  {
    static readonly string __ServiceName = "Duplicate.Duplicater";

    static readonly grpc::Marshaller<global::GrpcServer.Protos.EntryRequest> __Marshaller_Duplicate_EntryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.EntryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.Protos.EntryResponse> __Marshaller_Duplicate_EntryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.EntryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.Protos.DuplicateCheckRequest> __Marshaller_Duplicate_DuplicateCheckRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.DuplicateCheckRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.Protos.DuplicateCheckResponse> __Marshaller_Duplicate_DuplicateCheckResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.Protos.DuplicateCheckResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.Protos.EntryRequest, global::GrpcServer.Protos.EntryResponse> __Method_EntryDuplicate = new grpc::Method<global::GrpcServer.Protos.EntryRequest, global::GrpcServer.Protos.EntryResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "EntryDuplicate",
        __Marshaller_Duplicate_EntryRequest,
        __Marshaller_Duplicate_EntryResponse);

    static readonly grpc::Method<global::GrpcServer.Protos.DuplicateCheckRequest, global::GrpcServer.Protos.DuplicateCheckResponse> __Method_DuplicateCheck = new grpc::Method<global::GrpcServer.Protos.DuplicateCheckRequest, global::GrpcServer.Protos.DuplicateCheckResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DuplicateCheck",
        __Marshaller_Duplicate_DuplicateCheckRequest,
        __Marshaller_Duplicate_DuplicateCheckResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.Protos.DuplicateReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Duplicater</summary>
    public partial class DuplicaterClient : grpc::ClientBase<DuplicaterClient>
    {
      /// <summary>Creates a new client for Duplicater</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DuplicaterClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Duplicater that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DuplicaterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DuplicaterClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DuplicaterClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// 进队列接口。
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.EntryRequest, global::GrpcServer.Protos.EntryResponse> EntryDuplicate(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EntryDuplicate(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 进队列接口。
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.EntryRequest, global::GrpcServer.Protos.EntryResponse> EntryDuplicate(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_EntryDuplicate, null, options);
      }
      /// <summary>
      /// 判重接口。
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.DuplicateCheckRequest, global::GrpcServer.Protos.DuplicateCheckResponse> DuplicateCheck(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DuplicateCheck(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 判重接口。
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.DuplicateCheckRequest, global::GrpcServer.Protos.DuplicateCheckResponse> DuplicateCheck(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_DuplicateCheck, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DuplicaterClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DuplicaterClient(configuration);
      }
    }

  }
}
#endregion
